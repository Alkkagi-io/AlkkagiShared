{
  "version": 3,
  "sources": ["../Utils/BundleHelper/BundleIndex.js", "../Data/Resource/DataParseHelper.js", "../Data/Resource/ResourceBase.js", "../Data/Resource/ResourceManager.js", "../modules/encodingutility.js", "../modules/bufferhandle.js", "../modules/logger.js", "../modules/serializabledata.js", "../modules/vector.js", "../packets/base/packet.js", "../packets/base/packethandler.js", "../packets/base/packetmanager.js", "../packets/epacketid.js", "../packets/messagepacket.js", "../packets/vectorpacket.js"],
  "sourcesContent": ["export * from './../../../AlkkagiShared/Data/Resource/DataParseHelper.js';\nexport * from './../../../AlkkagiShared/Data/Resource/ResourceBase.js';\nexport * from './../../../AlkkagiShared/Data/Resource/ResourceManager.js';\nexport * from './../../../AlkkagiShared/modules/bufferhandle.js';\nexport * from './../../../AlkkagiShared/modules/encodingutility.js';\nexport * from './../../../AlkkagiShared/modules/logger.js';\nexport * from './../../../AlkkagiShared/modules/serializabledata.js';\nexport * from './../../../AlkkagiShared/modules/vector.js';\nexport * from './../../../AlkkagiShared/packets/base/packet.js';\nexport * from './../../../AlkkagiShared/packets/base/packethandler.js';\nexport * from './../../../AlkkagiShared/packets/base/packetmanager.js';\nexport * from './../../../AlkkagiShared/packets/epacketid.js';\nexport * from './../../../AlkkagiShared/packets/index.js';\nexport * from './../../../AlkkagiShared/packets/messagepacket.js';\nexport * from './../../../AlkkagiShared/packets/vectorpacket.js';", "function parseToFloat(v) {\n  if (v === null || v === undefined) \n    return null;\n  \n  const s = String(v).trim().replace(\",\", \".\");\n  const n = Number.parseFloat(s);\n  return Number.isFinite(n) ? n : null;\n}\n\nfunction parseToInteger(v) {\n  if (v === null || v === undefined)\n    return null;\n\n  const n = Number.parseInt(String(v).trim(), 10);\n  return Number.isFinite(n) ? n : null;\n}\n\nfunction parseToBoolean(v) {\n  if (v === null || v === undefined) \n    return null;\n  \n  const s = String(v).trim().toLowerCase();\n\n  if (s === \"true\" || s === \"1\") \n    return true;\n\n  if (s === \"false\" || s === \"0\") \n    return false;\n\n  return null;\n}\n\nexport { parseToFloat, parseToInteger, parseToBoolean }", "import { parseToInteger, parseToFloat, parseToBoolean } from \"./DataParseHelper.js\";\n\nclass ResourceBase {\n    constructor() {\n        this.id = 0;\n        this.name = \"\";\n        this.dict = {};\n    }\n\n    init(id, dict) {\n        this.id = id;\n        this.dict = dict || {};\n        this.name = this.getDictValue(\"Name\", \"\");\n    }\n\n    hasDict(key) {\n        return Object.prototype.hasOwnProperty.call(this.dict, key);\n    }\n\n    getDictValue(key, defaultValue = \"\") {\n        return this.dict[key];\n    }\n\n    getDictValueInt(key, defaultValue = 0) {\n        const n = parseToInteger(this.dict[key]);\n        return Number.isFinite(n) ? n : defaultValue;\n    }\n\n    getDictValueFloat(key, defaultValue = 0) {\n        const n = parseToFloat(this.dict[key]);\n        return Number.isFinite(n) ? n : defaultValue;\n    }\n\n    getDictValueBool(key, defaultValue = false) {\n        const b = parseToBoolean(this.dict[key]);\n        return (b === undefined || b === null) ? defaultValue : Boolean(b);\n    }\n\n    getDictValueArray(key, defaultValue = []) {\n        const raw = this.dict[key];\n        if (raw === undefined || raw === null) return defaultValue;\n\n        if (Array.isArray(raw)) return raw;\n\n        if (typeof raw === \"string\") {\n            try {\n                const arr = JSON.parse(raw);\n                if (Array.isArray(arr)) return arr;\n            } catch { /* fallthrough */ }\n            const csv = raw.split(\",\").map(s => s.trim()).filter(s => s.length > 0);\n            if (csv.length > 0) return csv;\n        }\n\n        return defaultValue;\n    }\n\n    static _ensureStore() {\n        if (!Object.prototype.hasOwnProperty.call(this, \"items\")) {\n            Object.defineProperty(this, \"items\", {\n                value: new Map(),\n                writable: true,\n                enumerable: false,\n                configurable: true,\n            });\n        }\n    }\n\n    static get(id) {\n        this._ensureStore();\n        return this.items.get(id);\n    }\n\n    static getWhere(pred) {\n        this._ensureStore();\n        const out = [];\n        for (const v of this.items.values()) {\n            if (!pred || pred(v)) out.push(v);\n        }\n        return out;\n    }\n\n    static async load(fileName, clear = true) {\n        const ctor = this;\n        ctor._ensureStore();\n\n        const baseDir = \"../../../AlkkagiData\";\n\n        const path = await import(\"node:path\");\n        const fs = await import(\"node:fs/promises\");\n        const fss = await import(\"node:fs\");\n\n        const p = path.resolve(baseDir, fileName);\n        if (!fss.existsSync(p)) {\n            console.log(`[${ctor.name}] File not found: ${p}`);\n            return;\n        }\n\n        let text;\n        try {\n            text = await fs.readFile(p, \"utf8\");\n        } catch (e) {\n            console.log(`[${ctor.name}] File read error: ${p}`);\n            return;\n        }\n\n        let root;\n        try {\n            const norm = text.charCodeAt(0) === 0xFEFF ? text.slice(1) : text;\n            root = JSON.parse(norm);\n        } catch {\n            console.log(`[${ctor.name}] JSON parse error: ${fileName}`);\n            return;\n        }\n\n        if (clear) ctor.items.clear();\n\n        for (const idStr in root) {\n            if (!Object.prototype.hasOwnProperty.call(root, idStr)) continue;\n\n            const id = Number.parseInt(idStr, 10);\n            if (!Number.isFinite(id)) continue;\n\n            const value = root[idStr];\n            let dict = value;\n\n            if (typeof value === \"string\") {\n                try {\n                    dict = JSON.parse(value);\n                } catch {\n                    console.log(`[${ctor.name}] Skip id=${id} (inner JSON parse error)`);\n                    continue;\n                }\n            }\n\n            if (!dict || typeof dict !== \"object\") {\n                console.log(`[${ctor.name}] Skip id=${id} (value is not an object)`);\n                continue;\n            }\n\n            const item = new ctor();\n            item.init(id, dict);\n            ctor.items.set(id, item);\n        }\n\n        console.log(`[${ctor.name}] Loaded ${ctor.items.size} items from ${path.relative(baseDir, p)}.`);\n    }\n}\n\nexport { ResourceBase };", "class ResourceManager {\n    constructor() {\n        this.loaded = false;\n    }\n\n    load(force = false) {\n        if (this.loaded && !force) \n            return;\n        \n        // data load\n\n        this.loaded = true;\n    }\n}\n\nexport { ResourceManager };", "function encodeUTF8(str) {\n    if (typeof TextEncoder !== \"undefined\") {\n        return new TextEncoder().encode(str);\n    }\n\n    // Fallback: UTF-8 \uC218\uB3D9 \uC778\uCF54\uB529 (\uC11C\uB85C\uAC8C\uC774\uD2B8 \uCC98\uB9AC \uD3EC\uD568)\n    const out = [];\n    for (let i = 0; i < str.length; i++) {\n        let cp = str.charCodeAt(i);\n\n        // \uC11C\uB85C\uAC8C\uC774\uD2B8 \uD398\uC5B4 \u2192 \uCF54\uB4DC\uD3EC\uC778\uD2B8\uB85C \uACB0\uD569 (U+10000 \uC774\uC0C1)\n        if (cp >= 0xD800 && cp <= 0xDBFF && i + 1 < str.length) {\n            const low = str.charCodeAt(i + 1);\n            if (low >= 0xDC00 && low <= 0xDFFF) {\n                cp = 0x10000 + ((cp - 0xD800) << 10) + (low - 0xDC00);\n                i++;\n            }\n        }\n\n        // UTF-8 \uBC14\uC774\uD2B8 \uBD84\uD574\n        if (cp <= 0x7F) {\n            out.push(cp);\n        } else if (cp <= 0x7FF) {\n            out.push(0xC0 | (cp >> 6), 0x80 | (cp & 0x3F));\n        } else if (cp <= 0xFFFF) {\n            out.push(\n                0xE0 | (cp >> 12),\n                0x80 | ((cp >> 6) & 0x3F),\n                0x80 | (cp & 0x3F)\n            );\n        } else {\n            out.push(\n                0xF0 | (cp >> 18),\n                0x80 | ((cp >> 12) & 0x3F),\n                0x80 | ((cp >> 6) & 0x3F),\n                0x80 | (cp & 0x3F)\n            );\n        }\n    }\n    return Uint8Array.from(out);\n}\n\nfunction decodeUTF8(bytes) {\n    if (typeof TextDecoder !== \"undefined\") {\n        return new TextDecoder(\"utf-8\").decode(bytes);\n    }\n\n    // Fallback: UTF-8 \uC218\uB3D9 \uB514\uCF54\uB529 (\uAC04\uB2E8 \uAC80\uC99D, \uC5D0\uB7EC \uCCB4\uD06C \uCD5C\uC18C)\n    let out = \"\";\n    for (let i = 0; i < bytes.length;) {\n        const b0 = bytes[i++];\n\n        if (b0 < 0x80) {\n            // 1\uBC14\uC774\uD2B8\n            out += String.fromCharCode(b0);\n            continue;\n        }\n\n        if ((b0 & 0xE0) === 0xC0) {\n            // 2\uBC14\uC774\uD2B8\n            const b1 = (bytes[i++] ?? 0) & 0x3F;\n            const cp = ((b0 & 0x1F) << 6) | b1;\n            out += String.fromCharCode(cp);\n            continue;\n        }\n\n        if ((b0 & 0xF0) === 0xE0) {\n            // 3\uBC14\uC774\uD2B8\n            const b1 = (bytes[i++] ?? 0) & 0x3F;\n            const b2 = (bytes[i++] ?? 0) & 0x3F;\n            const cp = ((b0 & 0x0F) << 12) | (b1 << 6) | b2;\n            out += String.fromCharCode(cp);\n            continue;\n        }\n\n        // 4\uBC14\uC774\uD2B8 (U+10000 \uC774\uC0C1 \u2192 \uC11C\uB85C\uAC8C\uC774\uD2B8 \uD398\uC5B4\uB85C \uBCC0\uD658)\n        const b1 = (bytes[i++] ?? 0) & 0x3F;\n        const b2 = (bytes[i++] ?? 0) & 0x3F;\n        const b3 = (bytes[i++] ?? 0) & 0x3F;\n\n        const cp = ((b0 & 0x07) << 18) | (b1 << 12) | (b2 << 6) | b3;\n        const high = 0xD800 + ((cp - 0x10000) >> 10);\n        const low = 0xDC00 + ((cp - 0x10000) & 0x3FF);\n        out += String.fromCharCode(high, low);\n    }\n    return out;\n}\n\n\nfunction encodeUTF16LE(str, withBOM = false) {\n    // JS \uBB38\uC790\uC5F4\uC740 \uC774\uBBF8 UTF-16 \uCF54\uB4DC \uC720\uB2DB\uB4E4\uC758 \uC2DC\uD000\uC2A4\n    // \u2192 \uADF8\uB300\uB85C \uB9AC\uD2C0\uC5D4\uB514\uC548 \uBC14\uC774\uD2B8\uB85C \uD3BC\uCE58\uBA74 \uB428. (\uC11C\uB85C\uAC8C\uC774\uD2B8\uB294 16\uBE44\uD2B8 2\uAC1C\uB85C \uC790\uC5F0\uD788 \uAE30\uB85D)\n    const units = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        // \uC720\uD6A8\uD55C \uC11C\uB85C\uAC8C\uC774\uD2B8 \uD398\uC5B4\uBA74 \uB458 \uB2E4 \uB123\uACE0 \uAC74\uB108\uB6F0\uAE30\n        if (c >= 0xD800 && c <= 0xDBFF && i + 1 < str.length) {\n            const d = str.charCodeAt(i + 1);\n            if (d >= 0xDC00 && d <= 0xDFFF) {\n                units.push(c, d);\n                i++;\n                continue;\n            }\n        }\n        units.push(c);\n    }\n\n    const extra = withBOM ? 2 : 0;\n    const out = new Uint8Array(units.length * 2 + extra);\n    let o = 0;\n\n    // BOM: 0xFF 0xFE (LE\uC6A9)\n    if (withBOM) {\n        out[o++] = 0xFF;\n        out[o++] = 0xFE;\n    }\n\n    // \uB9AC\uD2C0\uC5D4\uB514\uC548\uC73C\uB85C \uAE30\uB85D (low byte \u2192 high byte)\n    for (let i = 0; i < units.length; i++) {\n        const u = units[i];\n        out[o++] = u & 0xFF;\n        out[o++] = u >> 8;\n    }\n\n    return out;\n}\n\nfunction decodeUTF16LE(bytes) {\n    let o = 0;\n    if (bytes.length >= 2 && bytes[0] === 0xFF && bytes[1] === 0xFE) \n        o = 2; // skip BOM\n\n    const CHUNK = 0x8000;\n    const len = (bytes.length - o) >>> 1;\n    let out = \"\";\n    for (let i = 0; i < len; i += CHUNK) {\n        const n = Math.min(CHUNK, len - i);\n        const arr = new Array(n);\n        for (let j = 0; j < n; j++)  { \n            arr[j] = bytes[o + ((i + j) << 1)] | (bytes[o + ((i + j) << 1) + 1] << 8); \n        }\n\n        out += String.fromCharCode(...arr);\n    }\n\n    return out;\n}\n\nexport { encodeUTF8, decodeUTF8, encodeUTF16LE, decodeUTF16LE };", "import { encodeUTF8, decodeUTF8, encodeUTF16LE, decodeUTF16LE } from './encodingutility.js';\n\nclass BufferReadHandle {\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.view = new DataView(buffer);\n        this.offset = 0;\n    }\n\n    readUint8() {\n        if(this.offset + 1 > this.buffer.byteLength) {\n            throw new Error('Error with readUint8: Out of bounds');\n        }\n\n        const value = this.view.getUint8(this.offset);\n        this.offset += 1;\n\n        return value;\n    }\n    \n    readUint16() {\n        if(this.offset + 2 > this.buffer.byteLength) {\n            throw new Error('Error with readUint16: Out of bounds');\n        }\n\n        const value = this.view.getUint16(this.offset, true);\n        this.offset += 2;\n\n        return value;\n    }\n    \n    readUint32() {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with readUint32: Out of bounds');\n        }\n\n        const value = this.view.getUint32(this.offset, true);\n        this.offset += 4;\n\n        return value;\n    }\n\n    readInt8() {\n        if(this.offset + 1 > this.buffer.byteLength) {\n            throw new Error('Error with readInt8: Out of bounds');\n        }\n\n        const value = this.view.getInt8(this.offset);\n        this.offset += 1;\n\n        return value;\n    }\n    \n    readInt16() {\n        if(this.offset + 2 > this.buffer.byteLength) {\n            throw new Error('Error with readInt16: Out of bounds');\n        }\n\n        const value = this.view.getInt16(this.offset, true);\n        this.offset += 2;\n\n        return value;\n    }\n    \n    readInt32() {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with readInt32: Out of bounds');\n        }\n\n        const value = this.view.getInt32(this.offset, true);\n        this.offset += 4;\n\n        return value;\n    }\n\n    readFloat32() {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with readFloat32: Out of bounds');\n        }\n\n        const value = this.view.getFloat32(this.offset, true);\n        this.offset += 4;\n\n        return value;\n    }\n    \n    readFloat64() {\n        if(this.offset + 8 > this.buffer.byteLength) {\n            throw new Error('Error with readFloat64: Out of bounds');\n        }\n\n        const value = this.view.getFloat64(this.offset, true);\n        this.offset += 8;\n\n        return value;\n    }\n\n    readStringUTF8() {\n        const length = this.readUint16();\n        if(this.offset + length > this.buffer.byteLength) \n            throw new Error('Error with readStringUTF8: Out of bounds');\n    \n        const bytes = new Uint8Array(this.buffer, this.offset, length);\n        const str = decodeUTF8(bytes);\n        this.offset += length;\n    \n        return str;\n    }\n    \n    readStringUTF16LE() {\n        const length = this.readUint16();\n        if(this.offset + length > this.buffer.byteLength) \n            throw new Error('Error with readStringUTF16LE: Out of bounds');\n    \n        const bytes = new Uint8Array(this.buffer, this.offset, length);\n        const str = decodeUTF16LE(bytes);\n        this.offset += length;\n    \n        return str;\n    }\n\n    readBytes() {\n        const bytes = new Uint8Array(this.readArrayBuffer());\n        return bytes;\n    }\n\n    readArrayBuffer() {\n        const length = this.readUint16();\n        if(this.offset + length > this.buffer.byteLength) \n            throw new Error('Error with readArrayBuffer: Out of bounds');\n\n        const arrayBuffer = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n\n        return arrayBuffer;\n    }\n}\n\nclass BufferWriteHandle {\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.view = new DataView(buffer);\n        this.offset = 0;\n    }\n    \n    writeUint8(value) {\n        if(this.offset + 1 > this.buffer.byteLength) {\n            throw new Error('Error with writeUint8: Out of bounds');\n        }\n\n        this.view.setUint8(this.offset, value);\n        this.offset += 1;\n    }\n    \n    writeUint16(value) {\n        if(this.offset + 2 > this.buffer.byteLength) {\n            throw new Error('Error with writeUint16: Out of bounds');\n        }\n\n        this.view.setUint16(this.offset, value, true);\n        this.offset += 2;\n    }\n    \n    writeUint32(value) {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with writeUint32: Out of bounds');\n        }\n\n        this.view.setUint32(this.offset, value, true);\n        this.offset += 4;\n    }\n\n    writeInt8(value) {\n        if(this.offset + 1 > this.buffer.byteLength) {\n            throw new Error('Error with writeInt8: Out of bounds');\n        }\n\n        this.view.setInt8(this.offset, value);\n        this.offset += 1;\n    }\n    \n    writeInt16(value) {\n        if(this.offset + 2 > this.buffer.byteLength) {\n            throw new Error('Error with writeInt16: Out of bounds');\n        }\n\n        this.view.setInt16(this.offset, value, true);\n        this.offset += 2;\n    }\n    \n    writeInt32(value) {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with writeInt32: Out of bounds');\n        }\n\n        this.view.setInt32(this.offset, value, true);\n        this.offset += 4;\n    }\n    \n    writeFloat32(value) {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with writeFloat32: Out of bounds');\n        }\n\n        this.view.setFloat32(this.offset, value, true);\n        this.offset += 4;\n    }\n    \n    writeFloat64(value) {\n        if(this.offset + 8 > this.buffer.byteLength) {\n            throw new Error('Error with writeFloat64: Out of bounds');\n        }\n\n        this.view.setFloat64(this.offset, value, true);\n        this.offset += 8;\n    }\n\n    writeStringUTF8(value) {\n        const strBuffer = encodeUTF8(value);\n        const length = strBuffer.length;\n    \n        if(length > 65535)\n            throw new Error('Error with writeStringUTF8: Out of bounds');\n            \n        if(this.offset + 2 + length > this.buffer.byteLength) \n            throw new Error('Error with writeStringUTF8: Out of bounds');\n\n        this.writeUint16(length);\n        new Uint8Array(this.buffer, this.offset, length).set(strBuffer);\n\n        this.offset += length;\n    }\n    \n    writeStringUTF16LE(value) {\n        const strBuffer = encodeUTF16LE(value, false);\n        const length = strBuffer.length;\n    \n        if(length > 65535)\n            throw new Error('Error with writeStringUTF16LE: Out of bounds');\n\n        if(this.offset + 2 + length > this.buffer.byteLength) \n            throw new Error('Error with writeStringUTF16LE: Out of bounds');\n\n        this.writeUint16(length);\n        new Uint8Array(this.buffer, this.offset, length).set(strBuffer);\n\n        this.offset += length;\n    }\n\n    writeBytes(bytes) {\n        const length = bytes.length;\n        if(this.offset + length > this.buffer.byteLength) \n            throw new Error('Error with writeBytes: Out of bounds');\n\n        this.writeUint16(length);\n        new Uint8Array(this.buffer, this.offset, length).set(bytes);\n\n        this.offset += length;\n    }\n\n    writeArrayBuffer(arrayBuffer) {\n        const bytes = new Uint8Array(arrayBuffer);\n        this.writeBytes(bytes);\n    }\n\n    build() {\n        return this.buffer.slice(0, this.offset);\n    }\n}\n\nfunction getFlexiableUTF8Size(value) {\n    return 2 + value.length * 4;\n}\n\nfunction getFlexiableUTF16LESize(value) {\n    return 2 + value.length * 4;\n}\n\nfunction getBytesHeaderSize() {\n    return 2;\n}\n\nexport { BufferReadHandle, BufferWriteHandle };\nexport { getFlexiableUTF8Size, getFlexiableUTF16LESize, getBytesHeaderSize };", "const EColors = {\n    ERROR: '\\x1b[31m', // red\n    WARN: '\\x1b[33m',  // yellow\n    INFO: '\\x1b[36m',  // turquoise\n    DEBUG: '\\x1b[90m', // gray\n    RESET: '\\x1b[0m'   // reset\n};\n\nconst ELogLevel = {\n    ERROR: 0,\n    WARN: 1,\n    INFO: 2,\n    DEBUG: 3\n};\n\nconst ELogMode = {\n    DEVELOPMENT: 'development',\n    PRODUCTION: 'production',\n    MASTER: 'master',\n}\n\nconst ELevelOfMode = {\n    [ELogMode.DEVELOPMENT]: ELogLevel.DEBUG,\n    [ELogMode.PRODUCTION]: ELogLevel.INFO,\n    [ELogMode.MASTER]: ELogLevel.ERROR,\n}\n\nclass Logger {\n    constructor() {\n        this.currentLevel = ELevelOfMode[ELogMode.DEVELOPMENT];\n    }\n\n    setMode(mode) {\n        if (ELevelOfMode.hasOwnProperty(mode) === false)\n            return;\n\n        this.currentLevel = ELevelOfMode[mode];\n    }\n\n    getTimestamp() {\n        return new Date().toISOString();\n    }\n\n    formatMessage(level, category, message) {\n        const timestamp = this.getTimestamp();\n        const color = EColors[level] || '';\n        const reset = EColors.RESET;\n        \n        let formattedMessage = `${color}[${timestamp}] [${level}] [${category}] ${message}${reset}`;\n        return formattedMessage;\n    }\n\n    log(level, category, message) {\n        if (ELogLevel[level] > this.currentLevel) \n            return;\n    \n        console.log(this.formatMessage(level, category, message));\n    }\n\n    error(category, message) {\n        this.log('ERROR', category, message);\n    }\n\n    warn(category, message) {\n        this.log('WARN', category, message);\n    }\n\n    info(category, message) {\n        this.log('INFO', category, message);\n    }\n\n    debug(category, message) {\n        this.log('DEBUG', category, message);\n    }\n}\n\n// singleton\nconst logger = new Logger();\nexport { ELogLevel, ELogMode, logger };\n", "import { BufferReadHandle, BufferWriteHandle } from \"./bufferhandle.js\";\n\nclass SerializableData {\n    constructor() {\n    }\n\n    getFlexiableSize() {\n        throw new Error(\"Abstract method 'getFlexiableSize' must be implemented\");\n    }\n\n    serialize() {\n        const buffer = new ArrayBuffer(this.getFlexiableSize());\n        const writeHandle = new BufferWriteHandle(buffer);\n\n        this.onSerialize(writeHandle);\n\n        return writeHandle.build();\n    }\n\n    onSerialize(writeHandle) {\n        throw new Error(\"Abstract method 'onSerialize' must be implemented\");\n    }\n\n    deserialize(data) {\n        const readHandle = new BufferReadHandle(data);\n\n        this.onDeserialize(readHandle);\n\n        return this;\n    }\n\n    onDeserialize(readHandle) {\n        throw new Error(\"Abstract method 'onDeserialize' must be implemented\");\n    }\n}\n\nexport { SerializableData };", "import { SerializableData } from './serializabledata.js';\n\nclass Vector extends SerializableData {\n    constructor(x = 0, y = 0) {\n        super();\n        this.x = x;\n        this.y = y;\n    }\n\n    getFlexiableSize() {\n        let size = 0;\n\n        size += 4; // x float32\n        size += 4; // y float32\n\n        return size;\n    }\n\n    onSerialize(writeHandle) {\n        writeHandle.writeFloat32(this.x);\n        writeHandle.writeFloat32(this.y);\n    }\n\n    onDeserialize(readHandle) {\n        this.x = readHandle.readFloat32();\n        this.y = readHandle.readFloat32();\n    }\n\n    getMagnitude() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    getSqrMagnitude() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    getNormalized() {\n        const length = this.getMagnitude();\n        if(length === 0) \n            return new Vector(0, 0);\n\n        return new Vector(this.x / length, this.y / length);\n    }\n\n    normalize() {\n        const length = this.getMagnitude();\n        if(length === 0) \n            return;\n\n        this.x /= length;\n        this.y /= length;\n    }\n\n    getAdded(vector) {\n        return new Vector(this.x + vector.x, this.y + vector.y);\n    }\n\n    add(vector) {\n        this.x += vector.x;\n        this.y += vector.y;\n    }\n\n    getSubtracted(vector) {\n        return new Vector(this.x - vector.x, this.y - vector.y);\n    }\n\n    subtract(vector) {\n        this.x -= vector.x;\n        this.y -= vector.y;\n    }\n\n    getMultiplied(value) {\n        return new Vector(this.x * value, this.y * value);\n    }\n\n    multiply(value) {\n        this.x *= value;\n        this.y *= value;\n    }\n\n    getDivided(value) {\n        return new Vector(this.x / value, this.y / value);\n    }\n\n    divide(value) {\n        this.x /= value;\n        this.y /= value;\n    }\n}\n\nexport { Vector };", "import { SerializableData } from \"../../modules/serializabledata.js\";\n\nclass Packet extends SerializableData {\n    constructor() {\n        super();\n    }\n\n    getPacketID() {\n        throw new Error(\"Abstract method 'getPacketID' must be implemented\");\n    }\n\n    getFlexiableSize() {\n        let size = 0;\n        \n        size += 1; // packetID\n\n        return size;\n    }\n\n    onSerialize(writeHandle) {\n        writeHandle.writeUint8(this.getPacketID()); // write packetID\n    }\n\n    onDeserialize(readHandle) {\n        readHandle.readUint8(); // skip packetID\n    }\n}\n\nexport { Packet };", "class PacketHandler {\n    constructor() {\n    }\n\n    handle(packet) {\n        throw new Error(\"Abstract method 'handle' must be implemented\");\n    }\n}\n\nexport { PacketHandler };", "class PacketManager {\n    static factories = { };\n    static handlers = { };\n    static handlerArgs = [ ];\n\n    constructor() {\n        throw new Error(\"PacketManager is a static class and cannot be instantiated\");\n    }\n\n    static on(packetID, PacketType, PacketHandlerType) {\n        this.factories[packetID] = PacketType;\n        this.handlers[packetID] = PacketHandlerType;\n    }\n\n    static createPacket(packetID, buffer) {\n        const factory = this.factories[packetID];\n        if(factory === undefined) {\n            throw new Error(`Factory for packetID ${packetID} not found`);\n        }\n\n        const packet = new factory();\n        packet.deserialize(buffer);\n        return packet;\n    }\n\n    static createHandler(packetID, ...args) {\n        const handler = this.handlers[packetID];\n        if(handler === undefined) {\n            throw new Error(`Handler for packetID ${packetID} not found`);\n        }\n\n        return new handler(...this.handlerArgs, ...args);\n    }\n\n    static injectHandlerArgs(...args) {\n        this.handlerArgs = args;\n    }\n}\n\nexport { PacketManager };", "const EPacketID = {\n    MESSAGE: 0,\n    VECTOR: 1,\n}\n\nexport { EPacketID };", "import { getFlexiableUTF8Size } from \"../modules/bufferhandle.js\";\nimport { EPacketID, Packet } from \"./index.js\";\n\nclass MessagePacket extends Packet {\n    constructor(message = '') {\n        super();\n        this.message = message;\n    }\n\n    getPacketID() {\n        return EPacketID.MESSAGE;\n    }\n\n    getFlexiableSize() {\n        let size = super.getFlexiableSize();\n\n        size += getFlexiableUTF8Size(this.message); // utf8 str (max 4 bytes)\n\n        return size;\n    }\n\n    onSerialize(writeHandle) {\n        super.onSerialize(writeHandle);\n\n        writeHandle.writeStringUTF8(this.message);\n    }\n\n    onDeserialize(readHandle) {\n        super.onDeserialize(readHandle);\n\n        this.message = readHandle.readStringUTF8();\n    }\n}\n\nexport { MessagePacket };", "import { EPacketID, Packet } from \"./index.js\";\nimport { getBytesHeaderSize } from \"../modules/bufferhandle.js\";\nimport { Vector } from \"../modules/vector.js\";\n\nclass VectorPacket extends Packet {\n    constructor(vector = new Vector()) {\n        super();\n        this.vector = vector;\n    }\n\n    getPacketID() {\n        return EPacketID.VECTOR;\n    }\n\n    getFlexiableSize() {\n        let size = super.getFlexiableSize();\n\n        size += this.vector.getFlexiableSize() + getBytesHeaderSize(); // vector + header\n\n        return size;\n    }\n\n    onSerialize(writeHandle) {\n        super.onSerialize(writeHandle);\n\n        writeHandle.writeArrayBuffer(this.vector.serialize());\n    }\n\n    onDeserialize(readHandle) {\n        super.onDeserialize(readHandle);\n\n        this.vector = new Vector().deserialize(readHandle.readArrayBuffer());\n    }\n}\n\nexport { VectorPacket };"],
  "mappings": "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",
  "names": ["b1", "cp", "b2"]
}
