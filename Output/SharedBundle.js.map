{
  "version": 3,
  "sources": ["../Utils/BundleHelper/BundleIndex.js", "../Resource/DataParseHelper.js", "../Resource/ResourceBase.js", "../Resource/ResourceStat.js", "../modules/encodingutility.js", "../modules/bufferhandle.js", "../modules/logger.js", "../modules/serializabledata.js", "../modules/vector.js", "../packets/base/packet.js", "../packets/base/packethandler.js", "../packets/base/packetmanager.js", "../packets/epacketid.js", "../packets/messagepacket.js", "../packets/vectorpacket.js"],
  "sourcesContent": ["export * from './../../../AlkkagiShared/Resource/DataParseHelper.js';\nexport * from './../../../AlkkagiShared/Resource/ResourceBase.js';\nexport * from './../../../AlkkagiShared/Resource/ResourceStat.js';\nexport * from './../../../AlkkagiShared/modules/bufferhandle.js';\nexport * from './../../../AlkkagiShared/modules/encodingutility.js';\nexport * from './../../../AlkkagiShared/modules/logger.js';\nexport * from './../../../AlkkagiShared/modules/serializabledata.js';\nexport * from './../../../AlkkagiShared/modules/vector.js';\nexport * from './../../../AlkkagiShared/packets/base/packet.js';\nexport * from './../../../AlkkagiShared/packets/base/packethandler.js';\nexport * from './../../../AlkkagiShared/packets/base/packetmanager.js';\nexport * from './../../../AlkkagiShared/packets/epacketid.js';\nexport * from './../../../AlkkagiShared/packets/index.js';\nexport * from './../../../AlkkagiShared/packets/messagepacket.js';\nexport * from './../../../AlkkagiShared/packets/vectorpacket.js';", "function parseToFloat(v) {\n  if (v === null || v === undefined) \n    return null;\n  \n  const s = String(v).trim().replace(\",\", \".\");\n  const n = Number.parseFloat(s);\n  return Number.isFinite(n) ? n : null;\n}\n\nfunction parseToInteger(v) {\n  if (v === null || v === undefined)\n    return null;\n\n  const n = Number.parseInt(String(v).trim(), 10);\n  return Number.isFinite(n) ? n : null;\n}\n\nfunction parseToBoolean(v) {\n  if (v === null || v === undefined) \n    return null;\n  \n  const s = String(v).trim().toLowerCase();\n\n  if (s === \"true\" || s === \"1\") \n    return true;\n\n  if (s === \"false\" || s === \"0\") \n    return false;\n\n  return null;\n}\n\nexport { parseToFloat, parseToInteger, parseToBoolean }", "import { parseToInteger, parseToFloat, parseToBoolean } from \"./DataParseHelper.js\";\n\nclass ResourceBase {\n    constructor() {\n        this.id = 0;\n        this.name = \"\";\n        this.desc = \"\";\n        this.dict = {};\n    }\n\n    init(id, dict) {\n        this.id = id;\n        this.dict = dict || {};        \n        this.name = this.getDictValue(\"Name\", \"\");\n        this.desc = this.getDictValue(\"Desc\", \"\");\n    }\n\n    hasDict(key) {\n        return Object.prototype.hasOwnProperty.call(this.dict, key);\n    }\n\n    getDictValue(key, defaultValue = \"\") {\n        return this.dict[key];\n    }\n\n    getDictValueInt(key, defaultValue = 0) {\n        const n = parseToInteger(this.dict[key]);\n        return Number.isFinite(n) ? n : defaultValue;\n    }\n\n    getDictValueFloat(key, defaultValue = 0) {\n        const n = parseToFloat(this.dict[key]);\n        return Number.isFinite(n) ? n : defaultValue;\n    }\n\n    getDictValueBool(key, defaultValue = false) {\n        const b = parseToBoolean(this.dict[key]);\n        return (b === undefined || b === null) ? defaultValue : Boolean(b);\n    }\n\n    getDictValueArray(key, defaultValue = []) {\n        const raw = this.dict[key];\n        if (raw === undefined || raw === null) return defaultValue;\n\n        if (Array.isArray(raw)) return raw;\n\n        if (typeof raw === \"string\") {\n            try {\n                const arr = JSON.parse(raw);\n                if (Array.isArray(arr)) return arr;\n            } catch { /* fallthrough */ }\n            const csv = raw.split(\",\").map(s => s.trim()).filter(s => s.length > 0);\n            if (csv.length > 0) return csv;\n        }\n\n        return defaultValue;\n    }\n\n    static _ensureStore() {\n        if (!Object.prototype.hasOwnProperty.call(this, \"items\")) {\n            Object.defineProperty(this, \"items\", {\n                value: new Map(),\n                writable: true,\n                enumerable: false,\n                configurable: true,\n            });\n        }\n    }\n\n    static get(id) {\n        this._ensureStore();\n        return this.items.get(id);\n    }\n\n    static getWhere(pred) {\n        this._ensureStore();\n        const out = [];\n        for (const v of this.items.values()) {\n            if (!pred || pred(v)) out.push(v);\n        }\n        return out;\n    }\n\n    static async load(data, clear = true) {\n        const ctor = this;\n        ctor._ensureStore();\n\n        let root;\n        try {\n            const norm = data.charCodeAt(0) === 0xFEFF ? data.slice(1) : data;\n            root = JSON.parse(norm);\n        } catch {\n            throw new Error(`[${ctor.name}] JSON parse error`);\n        }\n\n        if (clear) \n            ctor.items.clear();\n\n        for (const idStr in root) {\n            if (!Object.prototype.hasOwnProperty.call(root, idStr)) continue;\n\n            const id = Number.parseInt(idStr, 10);\n            if (!Number.isFinite(id)) continue;\n\n            const value = root[idStr];\n            let dict = value;\n\n            if (typeof value === \"string\") {\n                try {\n                    dict = JSON.parse(value);\n                } catch {\n                    throw new Error(`[${ctor.name}] Skip id=${id} (inner JSON parse error)`);\n                }\n            }\n\n            if (!dict || typeof dict !== \"object\") {\n                throw new Error(`[${ctor.name}] Skip id=${id} (value is not an object)`);\n            }\n\n            const item = new ctor();\n            item.init(id, dict);\n            ctor.items.set(id, item);\n        }\n    }\n}\n\nexport { ResourceBase };", "import { parseToInteger, parseToFloat } from \"./DataParseHelper.js\";\nimport { ResourceBase } from \"./ResourceBase.js\";\n\nclass ResourceStat extends ResourceBase {\n    constructor() {\n        super();\n        this.icon = \"\";\n        this.levelUpEffect = \"\";\n        this.maxLevel = 0;\n        this.levelInfos = {};\n    }\n\n    init(id, dict) {\n        super.init(id, dict);\n\n        this.icon = this.getDictValue(\"Icon\", \"\");\n        this.levelUpEffect = this.getDictValue(\"LevelUpEffect\", \"\");\n        this.maxLevel = this.getDictValueInt(\"MaxLevel\", 0);\n\n        const raw = this.getDictValue(\"Levels\");\n        const baseInfo = raw[\"1\"];\n        if (!baseInfo) \n            throw new Error(\"Not exist level info exception\");\n\n        this.levelInfos = {};\n        for (const [levelKey, dict] of Object.entries(raw)) {\n            const level = parseToInteger(levelKey);\n            this.levelInfos[level] = level === 1 ? { ...baseInfo } : { ...baseInfo, ...dict };\n        }\n    }\n\n    getLevelValue(level, key) {\n        return this.levelInfos[level][key];\n    }\n\n    getLevelValueInteger(level, key, defaultValue = 0) {\n        const n = parseToInteger(this.levelInfos[level][key]);\n        return Number.isFinite(n) ? n : defaultValue;\n    }\n\n    getLevelValueFloat(level, key, defaultValue = 0) {\n        const n = parseToFloat(this.levelInfos[level][key]);\n        return Number.isFinite(n) ? n : defaultValue;\n    }\n}\n\nexport { ResourceStat };", "function encodeUTF8(str) {\n    if (typeof TextEncoder !== \"undefined\") {\n        return new TextEncoder().encode(str);\n    }\n\n    // Fallback: UTF-8 \uC218\uB3D9 \uC778\uCF54\uB529 (\uC11C\uB85C\uAC8C\uC774\uD2B8 \uCC98\uB9AC \uD3EC\uD568)\n    const out = [];\n    for (let i = 0; i < str.length; i++) {\n        let cp = str.charCodeAt(i);\n\n        // \uC11C\uB85C\uAC8C\uC774\uD2B8 \uD398\uC5B4 \u2192 \uCF54\uB4DC\uD3EC\uC778\uD2B8\uB85C \uACB0\uD569 (U+10000 \uC774\uC0C1)\n        if (cp >= 0xD800 && cp <= 0xDBFF && i + 1 < str.length) {\n            const low = str.charCodeAt(i + 1);\n            if (low >= 0xDC00 && low <= 0xDFFF) {\n                cp = 0x10000 + ((cp - 0xD800) << 10) + (low - 0xDC00);\n                i++;\n            }\n        }\n\n        // UTF-8 \uBC14\uC774\uD2B8 \uBD84\uD574\n        if (cp <= 0x7F) {\n            out.push(cp);\n        } else if (cp <= 0x7FF) {\n            out.push(0xC0 | (cp >> 6), 0x80 | (cp & 0x3F));\n        } else if (cp <= 0xFFFF) {\n            out.push(\n                0xE0 | (cp >> 12),\n                0x80 | ((cp >> 6) & 0x3F),\n                0x80 | (cp & 0x3F)\n            );\n        } else {\n            out.push(\n                0xF0 | (cp >> 18),\n                0x80 | ((cp >> 12) & 0x3F),\n                0x80 | ((cp >> 6) & 0x3F),\n                0x80 | (cp & 0x3F)\n            );\n        }\n    }\n    return Uint8Array.from(out);\n}\n\nfunction decodeUTF8(bytes) {\n    if (typeof TextDecoder !== \"undefined\") {\n        return new TextDecoder(\"utf-8\").decode(bytes);\n    }\n\n    // Fallback: UTF-8 \uC218\uB3D9 \uB514\uCF54\uB529 (\uAC04\uB2E8 \uAC80\uC99D, \uC5D0\uB7EC \uCCB4\uD06C \uCD5C\uC18C)\n    let out = \"\";\n    for (let i = 0; i < bytes.length;) {\n        const b0 = bytes[i++];\n\n        if (b0 < 0x80) {\n            // 1\uBC14\uC774\uD2B8\n            out += String.fromCharCode(b0);\n            continue;\n        }\n\n        if ((b0 & 0xE0) === 0xC0) {\n            // 2\uBC14\uC774\uD2B8\n            const b1 = (bytes[i++] ?? 0) & 0x3F;\n            const cp = ((b0 & 0x1F) << 6) | b1;\n            out += String.fromCharCode(cp);\n            continue;\n        }\n\n        if ((b0 & 0xF0) === 0xE0) {\n            // 3\uBC14\uC774\uD2B8\n            const b1 = (bytes[i++] ?? 0) & 0x3F;\n            const b2 = (bytes[i++] ?? 0) & 0x3F;\n            const cp = ((b0 & 0x0F) << 12) | (b1 << 6) | b2;\n            out += String.fromCharCode(cp);\n            continue;\n        }\n\n        // 4\uBC14\uC774\uD2B8 (U+10000 \uC774\uC0C1 \u2192 \uC11C\uB85C\uAC8C\uC774\uD2B8 \uD398\uC5B4\uB85C \uBCC0\uD658)\n        const b1 = (bytes[i++] ?? 0) & 0x3F;\n        const b2 = (bytes[i++] ?? 0) & 0x3F;\n        const b3 = (bytes[i++] ?? 0) & 0x3F;\n\n        const cp = ((b0 & 0x07) << 18) | (b1 << 12) | (b2 << 6) | b3;\n        const high = 0xD800 + ((cp - 0x10000) >> 10);\n        const low = 0xDC00 + ((cp - 0x10000) & 0x3FF);\n        out += String.fromCharCode(high, low);\n    }\n    return out;\n}\n\n\nfunction encodeUTF16LE(str, withBOM = false) {\n    // JS \uBB38\uC790\uC5F4\uC740 \uC774\uBBF8 UTF-16 \uCF54\uB4DC \uC720\uB2DB\uB4E4\uC758 \uC2DC\uD000\uC2A4\n    // \u2192 \uADF8\uB300\uB85C \uB9AC\uD2C0\uC5D4\uB514\uC548 \uBC14\uC774\uD2B8\uB85C \uD3BC\uCE58\uBA74 \uB428. (\uC11C\uB85C\uAC8C\uC774\uD2B8\uB294 16\uBE44\uD2B8 2\uAC1C\uB85C \uC790\uC5F0\uD788 \uAE30\uB85D)\n    const units = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        // \uC720\uD6A8\uD55C \uC11C\uB85C\uAC8C\uC774\uD2B8 \uD398\uC5B4\uBA74 \uB458 \uB2E4 \uB123\uACE0 \uAC74\uB108\uB6F0\uAE30\n        if (c >= 0xD800 && c <= 0xDBFF && i + 1 < str.length) {\n            const d = str.charCodeAt(i + 1);\n            if (d >= 0xDC00 && d <= 0xDFFF) {\n                units.push(c, d);\n                i++;\n                continue;\n            }\n        }\n        units.push(c);\n    }\n\n    const extra = withBOM ? 2 : 0;\n    const out = new Uint8Array(units.length * 2 + extra);\n    let o = 0;\n\n    // BOM: 0xFF 0xFE (LE\uC6A9)\n    if (withBOM) {\n        out[o++] = 0xFF;\n        out[o++] = 0xFE;\n    }\n\n    // \uB9AC\uD2C0\uC5D4\uB514\uC548\uC73C\uB85C \uAE30\uB85D (low byte \u2192 high byte)\n    for (let i = 0; i < units.length; i++) {\n        const u = units[i];\n        out[o++] = u & 0xFF;\n        out[o++] = u >> 8;\n    }\n\n    return out;\n}\n\nfunction decodeUTF16LE(bytes) {\n    let o = 0;\n    if (bytes.length >= 2 && bytes[0] === 0xFF && bytes[1] === 0xFE) \n        o = 2; // skip BOM\n\n    const CHUNK = 0x8000;\n    const len = (bytes.length - o) >>> 1;\n    let out = \"\";\n    for (let i = 0; i < len; i += CHUNK) {\n        const n = Math.min(CHUNK, len - i);\n        const arr = new Array(n);\n        for (let j = 0; j < n; j++)  { \n            arr[j] = bytes[o + ((i + j) << 1)] | (bytes[o + ((i + j) << 1) + 1] << 8); \n        }\n\n        out += String.fromCharCode(...arr);\n    }\n\n    return out;\n}\n\nexport { encodeUTF8, decodeUTF8, encodeUTF16LE, decodeUTF16LE };", "import { encodeUTF8, decodeUTF8, encodeUTF16LE, decodeUTF16LE } from './encodingutility.js';\n\nclass BufferReadHandle {\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.view = new DataView(buffer);\n        this.offset = 0;\n    }\n\n    readUint8() {\n        if(this.offset + 1 > this.buffer.byteLength) {\n            throw new Error('Error with readUint8: Out of bounds');\n        }\n\n        const value = this.view.getUint8(this.offset);\n        this.offset += 1;\n\n        return value;\n    }\n    \n    readUint16() {\n        if(this.offset + 2 > this.buffer.byteLength) {\n            throw new Error('Error with readUint16: Out of bounds');\n        }\n\n        const value = this.view.getUint16(this.offset, true);\n        this.offset += 2;\n\n        return value;\n    }\n    \n    readUint32() {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with readUint32: Out of bounds');\n        }\n\n        const value = this.view.getUint32(this.offset, true);\n        this.offset += 4;\n\n        return value;\n    }\n\n    readInt8() {\n        if(this.offset + 1 > this.buffer.byteLength) {\n            throw new Error('Error with readInt8: Out of bounds');\n        }\n\n        const value = this.view.getInt8(this.offset);\n        this.offset += 1;\n\n        return value;\n    }\n    \n    readInt16() {\n        if(this.offset + 2 > this.buffer.byteLength) {\n            throw new Error('Error with readInt16: Out of bounds');\n        }\n\n        const value = this.view.getInt16(this.offset, true);\n        this.offset += 2;\n\n        return value;\n    }\n    \n    readInt32() {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with readInt32: Out of bounds');\n        }\n\n        const value = this.view.getInt32(this.offset, true);\n        this.offset += 4;\n\n        return value;\n    }\n\n    readFloat32() {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with readFloat32: Out of bounds');\n        }\n\n        const value = this.view.getFloat32(this.offset, true);\n        this.offset += 4;\n\n        return value;\n    }\n    \n    readFloat64() {\n        if(this.offset + 8 > this.buffer.byteLength) {\n            throw new Error('Error with readFloat64: Out of bounds');\n        }\n\n        const value = this.view.getFloat64(this.offset, true);\n        this.offset += 8;\n\n        return value;\n    }\n\n    readStringUTF8() {\n        const length = this.readUint16();\n        if(this.offset + length > this.buffer.byteLength) \n            throw new Error('Error with readStringUTF8: Out of bounds');\n    \n        const bytes = new Uint8Array(this.buffer, this.offset, length);\n        const str = decodeUTF8(bytes);\n        this.offset += length;\n    \n        return str;\n    }\n    \n    readStringUTF16LE() {\n        const length = this.readUint16();\n        if(this.offset + length > this.buffer.byteLength) \n            throw new Error('Error with readStringUTF16LE: Out of bounds');\n    \n        const bytes = new Uint8Array(this.buffer, this.offset, length);\n        const str = decodeUTF16LE(bytes);\n        this.offset += length;\n    \n        return str;\n    }\n\n    readBytes() {\n        const bytes = new Uint8Array(this.readArrayBuffer());\n        return bytes;\n    }\n\n    readArrayBuffer() {\n        const length = this.readUint16();\n        if(this.offset + length > this.buffer.byteLength) \n            throw new Error('Error with readArrayBuffer: Out of bounds');\n\n        const arrayBuffer = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n\n        return arrayBuffer;\n    }\n}\n\nclass BufferWriteHandle {\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.view = new DataView(buffer);\n        this.offset = 0;\n    }\n    \n    writeUint8(value) {\n        if(this.offset + 1 > this.buffer.byteLength) {\n            throw new Error('Error with writeUint8: Out of bounds');\n        }\n\n        this.view.setUint8(this.offset, value);\n        this.offset += 1;\n    }\n    \n    writeUint16(value) {\n        if(this.offset + 2 > this.buffer.byteLength) {\n            throw new Error('Error with writeUint16: Out of bounds');\n        }\n\n        this.view.setUint16(this.offset, value, true);\n        this.offset += 2;\n    }\n    \n    writeUint32(value) {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with writeUint32: Out of bounds');\n        }\n\n        this.view.setUint32(this.offset, value, true);\n        this.offset += 4;\n    }\n\n    writeInt8(value) {\n        if(this.offset + 1 > this.buffer.byteLength) {\n            throw new Error('Error with writeInt8: Out of bounds');\n        }\n\n        this.view.setInt8(this.offset, value);\n        this.offset += 1;\n    }\n    \n    writeInt16(value) {\n        if(this.offset + 2 > this.buffer.byteLength) {\n            throw new Error('Error with writeInt16: Out of bounds');\n        }\n\n        this.view.setInt16(this.offset, value, true);\n        this.offset += 2;\n    }\n    \n    writeInt32(value) {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with writeInt32: Out of bounds');\n        }\n\n        this.view.setInt32(this.offset, value, true);\n        this.offset += 4;\n    }\n    \n    writeFloat32(value) {\n        if(this.offset + 4 > this.buffer.byteLength) {\n            throw new Error('Error with writeFloat32: Out of bounds');\n        }\n\n        this.view.setFloat32(this.offset, value, true);\n        this.offset += 4;\n    }\n    \n    writeFloat64(value) {\n        if(this.offset + 8 > this.buffer.byteLength) {\n            throw new Error('Error with writeFloat64: Out of bounds');\n        }\n\n        this.view.setFloat64(this.offset, value, true);\n        this.offset += 8;\n    }\n\n    writeStringUTF8(value) {\n        const strBuffer = encodeUTF8(value);\n        const length = strBuffer.length;\n    \n        if(length > 65535)\n            throw new Error('Error with writeStringUTF8: Out of bounds');\n            \n        if(this.offset + 2 + length > this.buffer.byteLength) \n            throw new Error('Error with writeStringUTF8: Out of bounds');\n\n        this.writeUint16(length);\n        new Uint8Array(this.buffer, this.offset, length).set(strBuffer);\n\n        this.offset += length;\n    }\n    \n    writeStringUTF16LE(value) {\n        const strBuffer = encodeUTF16LE(value, false);\n        const length = strBuffer.length;\n    \n        if(length > 65535)\n            throw new Error('Error with writeStringUTF16LE: Out of bounds');\n\n        if(this.offset + 2 + length > this.buffer.byteLength) \n            throw new Error('Error with writeStringUTF16LE: Out of bounds');\n\n        this.writeUint16(length);\n        new Uint8Array(this.buffer, this.offset, length).set(strBuffer);\n\n        this.offset += length;\n    }\n\n    writeBytes(bytes) {\n        const length = bytes.length;\n        if(this.offset + length > this.buffer.byteLength) \n            throw new Error('Error with writeBytes: Out of bounds');\n\n        this.writeUint16(length);\n        new Uint8Array(this.buffer, this.offset, length).set(bytes);\n\n        this.offset += length;\n    }\n\n    writeArrayBuffer(arrayBuffer) {\n        const bytes = new Uint8Array(arrayBuffer);\n        this.writeBytes(bytes);\n    }\n\n    build() {\n        return this.buffer.slice(0, this.offset);\n    }\n}\n\nfunction getFlexiableUTF8Size(value) {\n    return 2 + value.length * 4;\n}\n\nfunction getFlexiableUTF16LESize(value) {\n    return 2 + value.length * 4;\n}\n\nfunction getBytesHeaderSize() {\n    return 2;\n}\n\nexport { BufferReadHandle, BufferWriteHandle };\nexport { getFlexiableUTF8Size, getFlexiableUTF16LESize, getBytesHeaderSize };", "const EColors = {\n    ERROR: '\\x1b[31m', // red\n    WARN: '\\x1b[33m',  // yellow\n    INFO: '\\x1b[36m',  // turquoise\n    DEBUG: '\\x1b[90m', // gray\n    RESET: '\\x1b[0m'   // reset\n};\n\nconst ELogLevel = {\n    ERROR: 0,\n    WARN: 1,\n    INFO: 2,\n    DEBUG: 3\n};\n\nconst ELogMode = {\n    DEVELOPMENT: 'development',\n    PRODUCTION: 'production',\n    MASTER: 'master',\n}\n\nconst ELevelOfMode = {\n    [ELogMode.DEVELOPMENT]: ELogLevel.DEBUG,\n    [ELogMode.PRODUCTION]: ELogLevel.INFO,\n    [ELogMode.MASTER]: ELogLevel.ERROR,\n}\n\nclass Logger {\n    constructor() {\n        this.currentLevel = ELevelOfMode[ELogMode.DEVELOPMENT];\n    }\n\n    setMode(mode) {\n        if (ELevelOfMode.hasOwnProperty(mode) === false)\n            return;\n\n        this.currentLevel = ELevelOfMode[mode];\n    }\n\n    getTimestamp() {\n        return new Date().toISOString();\n    }\n\n    formatMessage(level, category, message) {\n        const timestamp = this.getTimestamp();\n        const color = EColors[level] || '';\n        const reset = EColors.RESET;\n        \n        let formattedMessage = `${color}[${timestamp}] [${level}] [${category}] ${message}${reset}`;\n        return formattedMessage;\n    }\n\n    log(level, category, message) {\n        if (ELogLevel[level] > this.currentLevel) \n            return;\n    \n        console.log(this.formatMessage(level, category, message));\n    }\n\n    error(category, message) {\n        this.log('ERROR', category, message);\n    }\n\n    warn(category, message) {\n        this.log('WARN', category, message);\n    }\n\n    info(category, message) {\n        this.log('INFO', category, message);\n    }\n\n    debug(category, message) {\n        this.log('DEBUG', category, message);\n    }\n}\n\n// singleton\nconst logger = new Logger();\nexport { ELogLevel, ELogMode, logger };\n", "import { BufferReadHandle, BufferWriteHandle } from \"./bufferhandle.js\";\n\nclass SerializableData {\n    constructor() {\n    }\n\n    getFlexiableSize() {\n        throw new Error(\"Abstract method 'getFlexiableSize' must be implemented\");\n    }\n\n    serialize() {\n        const buffer = new ArrayBuffer(this.getFlexiableSize());\n        const writeHandle = new BufferWriteHandle(buffer);\n\n        this.onSerialize(writeHandle);\n\n        return writeHandle.build();\n    }\n\n    onSerialize(writeHandle) {\n        throw new Error(\"Abstract method 'onSerialize' must be implemented\");\n    }\n\n    deserialize(data) {\n        const readHandle = new BufferReadHandle(data);\n\n        this.onDeserialize(readHandle);\n\n        return this;\n    }\n\n    onDeserialize(readHandle) {\n        throw new Error(\"Abstract method 'onDeserialize' must be implemented\");\n    }\n}\n\nexport { SerializableData };", "import { SerializableData } from './serializabledata.js';\n\nclass Vector extends SerializableData {\n    constructor(x = 0, y = 0) {\n        super();\n        this.x = x;\n        this.y = y;\n    }\n\n    getFlexiableSize() {\n        let size = 0;\n\n        size += 4; // x float32\n        size += 4; // y float32\n\n        return size;\n    }\n\n    onSerialize(writeHandle) {\n        writeHandle.writeFloat32(this.x);\n        writeHandle.writeFloat32(this.y);\n    }\n\n    onDeserialize(readHandle) {\n        this.x = readHandle.readFloat32();\n        this.y = readHandle.readFloat32();\n    }\n\n    getMagnitude() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    getSqrMagnitude() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    getNormalized() {\n        const length = this.getMagnitude();\n        if(length === 0) \n            return new Vector(0, 0);\n\n        return new Vector(this.x / length, this.y / length);\n    }\n\n    normalize() {\n        const length = this.getMagnitude();\n        if(length === 0) \n            return;\n\n        this.x /= length;\n        this.y /= length;\n    }\n\n    getAdded(vector) {\n        return new Vector(this.x + vector.x, this.y + vector.y);\n    }\n\n    add(vector) {\n        this.x += vector.x;\n        this.y += vector.y;\n    }\n\n    getSubtracted(vector) {\n        return new Vector(this.x - vector.x, this.y - vector.y);\n    }\n\n    subtract(vector) {\n        this.x -= vector.x;\n        this.y -= vector.y;\n    }\n\n    getMultiplied(value) {\n        return new Vector(this.x * value, this.y * value);\n    }\n\n    multiply(value) {\n        this.x *= value;\n        this.y *= value;\n    }\n\n    getDivided(value) {\n        return new Vector(this.x / value, this.y / value);\n    }\n\n    divide(value) {\n        this.x /= value;\n        this.y /= value;\n    }\n}\n\nexport { Vector };", "import { SerializableData } from \"../../modules/serializabledata.js\";\n\nclass Packet extends SerializableData {\n    constructor() {\n        super();\n    }\n\n    getPacketID() {\n        throw new Error(\"Abstract method 'getPacketID' must be implemented\");\n    }\n\n    getFlexiableSize() {\n        let size = 0;\n        \n        size += 1; // packetID\n\n        return size;\n    }\n\n    onSerialize(writeHandle) {\n        writeHandle.writeUint8(this.getPacketID()); // write packetID\n    }\n\n    onDeserialize(readHandle) {\n        readHandle.readUint8(); // skip packetID\n    }\n}\n\nexport { Packet };", "class PacketHandler {\n    constructor() {\n    }\n\n    handle(packet) {\n        throw new Error(\"Abstract method 'handle' must be implemented\");\n    }\n}\n\nexport { PacketHandler };", "class PacketManager {\n    static factories = { };\n    static handlers = { };\n    static handlerArgs = [ ];\n\n    constructor() {\n        throw new Error(\"PacketManager is a static class and cannot be instantiated\");\n    }\n\n    static on(packetID, PacketType, PacketHandlerType) {\n        this.factories[packetID] = PacketType;\n        this.handlers[packetID] = PacketHandlerType;\n    }\n\n    static createPacket(packetID, buffer) {\n        const factory = this.factories[packetID];\n        if(factory === undefined) {\n            throw new Error(`Factory for packetID ${packetID} not found`);\n        }\n\n        const packet = new factory();\n        packet.deserialize(buffer);\n        return packet;\n    }\n\n    static createHandler(packetID, ...args) {\n        const handler = this.handlers[packetID];\n        if(handler === undefined) {\n            throw new Error(`Handler for packetID ${packetID} not found`);\n        }\n\n        return new handler(...this.handlerArgs, ...args);\n    }\n\n    static injectHandlerArgs(...args) {\n        this.handlerArgs = args;\n    }\n}\n\nexport { PacketManager };", "const EPacketID = {\n    MESSAGE: 0,\n    VECTOR: 1,\n}\n\nexport { EPacketID };", "import { getFlexiableUTF8Size } from \"../modules/bufferhandle.js\";\nimport { EPacketID, Packet } from \"./index.js\";\n\nclass MessagePacket extends Packet {\n    constructor(message = '') {\n        super();\n        this.message = message;\n    }\n\n    getPacketID() {\n        return EPacketID.MESSAGE;\n    }\n\n    getFlexiableSize() {\n        let size = super.getFlexiableSize();\n\n        size += getFlexiableUTF8Size(this.message); // utf8 str (max 4 bytes)\n\n        return size;\n    }\n\n    onSerialize(writeHandle) {\n        super.onSerialize(writeHandle);\n\n        writeHandle.writeStringUTF8(this.message);\n    }\n\n    onDeserialize(readHandle) {\n        super.onDeserialize(readHandle);\n\n        this.message = readHandle.readStringUTF8();\n    }\n}\n\nexport { MessagePacket };", "import { EPacketID, Packet } from \"./index.js\";\nimport { getBytesHeaderSize } from \"../modules/bufferhandle.js\";\nimport { Vector } from \"../modules/vector.js\";\n\nclass VectorPacket extends Packet {\n    constructor(vector = new Vector()) {\n        super();\n        this.vector = vector;\n    }\n\n    getPacketID() {\n        return EPacketID.VECTOR;\n    }\n\n    getFlexiableSize() {\n        let size = super.getFlexiableSize();\n\n        size += this.vector.getFlexiableSize() + getBytesHeaderSize(); // vector + header\n\n        return size;\n    }\n\n    onSerialize(writeHandle) {\n        super.onSerialize(writeHandle);\n\n        writeHandle.writeArrayBuffer(this.vector.serialize());\n    }\n\n    onDeserialize(readHandle) {\n        super.onDeserialize(readHandle);\n\n        this.vector = new Vector().deserialize(readHandle.readArrayBuffer());\n    }\n}\n\nexport { VectorPacket };"],
  "mappings": "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",
  "names": ["BundleIndex_exports", "__export", "BufferReadHandle", "BufferWriteHandle", "ELogLevel", "ELogMode", "EPacketID", "MessagePacket", "Packet", "PacketHandler", "PacketManager", "ResourceBase", "ResourceStat", "SerializableData", "Vector", "VectorPacket", "decodeUTF16LE", "decodeUTF8", "encodeUTF16LE", "encodeUTF8", "getBytesHeaderSize", "getFlexiableUTF16LESize", "getFlexiableUTF8Size", "logger", "parseToBoolean", "parseToFloat", "parseToInteger", "parseToFloat", "v", "s", "n", "parseToInteger", "parseToBoolean", "ResourceBase", "id", "dict", "key", "defaultValue", "n", "parseToInteger", "parseToFloat", "b", "parseToBoolean", "raw", "arr", "e", "csv", "s", "pred", "out", "v", "data", "clear", "ctor", "root", "norm", "idStr", "value", "item", "ResourceStat", "ResourceBase", "id", "dict", "raw", "baseInfo", "levelKey", "level", "parseToInteger", "__spreadValues", "key", "defaultValue", "n", "parseToFloat", "encodeUTF8", "str", "out", "i", "cp", "low", "decodeUTF8", "bytes", "_a", "_b", "_c", "_d", "_e", "_f", "b0", "b1", "b2", "b3", "high", "encodeUTF16LE", "withBOM", "units", "c", "d", "extra", "u", "decodeUTF16LE", "o", "CHUNK", "len", "arr", "j", "BufferReadHandle", "buffer", "value", "length", "bytes", "str", "decodeUTF8", "decodeUTF16LE", "arrayBuffer", "BufferWriteHandle", "strBuffer", "encodeUTF8", "encodeUTF16LE", "getFlexiableUTF8Size", "getFlexiableUTF16LESize", "getBytesHeaderSize", "EColors", "ELogLevel", "ELogMode", "ELevelOfMode", "Logger", "mode", "level", "category", "message", "timestamp", "color", "reset", "logger", "SerializableData", "buffer", "writeHandle", "BufferWriteHandle", "data", "readHandle", "BufferReadHandle", "Vector", "_Vector", "SerializableData", "x", "y", "size", "writeHandle", "readHandle", "length", "vector", "value", "Packet", "SerializableData", "size", "writeHandle", "readHandle", "PacketHandler", "packet", "PacketManager", "packetID", "PacketType", "PacketHandlerType", "buffer", "factory", "packet", "args", "handler", "__publicField", "EPacketID", "MessagePacket", "Packet", "message", "EPacketID", "size", "getFlexiableUTF8Size", "writeHandle", "readHandle", "VectorPacket", "Packet", "vector", "Vector", "EPacketID", "size", "getBytesHeaderSize", "writeHandle", "readHandle"]
}
